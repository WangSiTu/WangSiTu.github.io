<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[图片懒加载]]></title>
    <url>%2F2018%2F07%2F26%2F%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[javaScript实现图片懒加载功能 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge, chrome=1"&gt; &lt;title&gt;lazyload&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="imgList"&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;img src="" data-src="images/218954.jpg" alt=""&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354window.onload = function () &#123; (function () &#123; var imgList = [], delay, time = 100, offset = 0; // 函数防抖 function _delay() &#123; // 清除倒计时 clearTimeout(delay); delay = setTimeout(function () &#123; _loadImg(); &#125;, time) &#125;; // 执行图片加载 function _loadImg() &#123; for (var i = 0; i &lt; imgList.length; i++) &#123; // 是否在可视区域和src是否为空 (function (index) &#123; if (_isShow(imgList[index]) &amp;&amp; imgList[index].getAttribute('src') === '') &#123; setTimeout(function () &#123; imgList[index].src = imgList[index].getAttribute('data-src'); &#125;, 30 * i); &#125; &#125;)(i); &#125; &#125;; // 判断img是否出现在可视窗口 function _isShow(el) &#123; var coords = el.getBoundingClientRect(); return (0 &lt;= coords.top &amp;&amp; coords.top &lt;= (document.documentElement.clientHeight || window.innerHeight)); &#125;; // 获取所有需要实现懒加载图片对象引用并设置 window 监听事件 scroll function imgLoad(selector) &#123; if (selector) &#123; var nodes = document.querySelectorAll(selector); imgList = Array.apply(null, nodes); // 初始化图片加载 _loadImg(); window.addEventListener('scroll', _delay, false) &#125; else &#123; console.warn('请输入元素列表名称'); &#125; &#125;; imgLoad('.imgList img'); // imgLoad(); &#125;)(); &#125; 1234567891011121314body &#123; margin: 0; padding: 0; background: #f8f8f8 &#125; .imgList img &#123; display: block; width: 100%; height: 200px; background: #666; border-bottom: 1px solid #ccc; margin-bottom: 15px; &#125;]]></content>
      <tags>
        <tag>HTML JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[移动端软键盘搜索按钮]]></title>
    <url>%2F2018%2F06%2F22%2F%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%BD%AF%E9%94%AE%E7%9B%98%E6%90%9C%E7%B4%A2%E6%8C%89%E9%92%AE%2F</url>
    <content type="text"><![CDATA[最近有个需求，在移动端页面input输入框输入的时候要显示搜索按钮一开始是这么写的,虽然加了input type 设置为 search，但是显示是换行按钮123&lt;div class="m-c-search-l"&gt; &lt;span&gt;&lt;input class="ft-28 c-333" type="search" :placeholder="placeholder" v-model='searchText'/&gt;&lt;/span&gt;&lt;/div&gt; 如图所示 后来找了一些资料得加上form表单，action属性可以设置为空，不然还会跳转一次。然后监听form表单的submit提交触发接口搜索，用keycode事件方法监听键盘也是可以的。123&lt;form action="" @submit.prevent="onEnvent"&gt; &lt;span&gt;&lt;input class="ft-28 c-333" type="search" :placeholder="placeholder" v-model='searchText'/&gt;&lt;/span&gt;&lt;/form&gt; 下面的图是完成的状态]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
